# Docker-Compose and Ansible

By the end of this series, we want to be able to run an ansible playbook running a docker-compose file


## What we want to run

We want, eventually, to set up a docker-compose deployment on our server from a docker-compose file. This includes a few built images and one to build ourselves.


## Setting Up

First thing: set up ansible in a venv

```bash
 cd ~
 cd Desktop/
 mkdir ansible_compose
 cd ansible_compose/
 python3.7 -m venv env
 . env/bin/activate
 pip install ansible
```

Install docker-compose and docker on the host (in future, we might get this as ansible tasks too)

My localhost has already docker-compose and docker.

### Ansible Settings

From the docs:

> Groups are label for host selection and a way to bulk assign variables, they are not a first class entity, Ansible only cares about Hosts and Tasks.

 - We create *hosts* - targets for our deployment
 - We create *groups* - sets of hosts
 - We create *roles* - sets of tasks
 - We create *tasks* - simple commands like "install this package"
 - We link *roles* to *groups* in main.yaml

For our very simple example, we create 4 yaml files. This layout has flexibility to add other hosts/groups/tasks/roles.

*Filesystem structure of our ansible master*
```
(env) josh@josh-ThinkPad-T420:~/Desktop/ansible_compose$ tree -I 'env'
.
├── host_vars
│   └── lokal.yaml
├── inventory.yaml
├── main.yaml
└── roles
    └── docker-test
        └── tasks
            └── main.yaml

```
*lokal.yaml*

    (empty)

*inventory.yaml*

    lokal ansible_host=localhost

    [lokal_group]
    lokal

*main.yaml*

    - hosts: lokal_group
      roles:
        - docker-test


*roles/docker-test/tasks/main.yaml*

    - name: Pull the "hello-world" image from docker
      docker_image:
        state: present
        name: hello-world
        source: pull

### First Deployment

    ansible-playbook -i inventory.yaml main.yaml -l lokal_group

It doesn't work very well because ansible is trying `python` on the remote machine which is the system python2, let's point to a venv version instead:

*host_vars/lokal.yaml*

    ansible_python_interpreter: /home/josh/Desktop/ansible_compose/env/bin/python

Pip install whatever we need here (docker), try again:


```
(env) josh@josh-ThinkPad-T420:~/Desktop/ansible_compose$ ansible-playbook -i inventory.yaml main.yaml -l lokal_group

PLAY [lokal_group] ***************************************************************************************************

TASK [Gathering Facts] ***********************************************************************************************
ok: [lokal]

TASK [docker-test : Pull the "hello-world" image from docker] ********************************************************
ok: [lokal]

PLAY RECAP ***********************************************************************************************************
lokal                      : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
```

success!

### Recap

We set up the directory structure for ansible, and successfully pulled in one docker image.







