# Docker-Compose: Improve volume and config handling


 - By using more env vars (with suitable changes to the file in the docker image) we can avoid the need to copy over that superset config file
 - We can use "named volumes" to let Docker handle the volumes for us, so we no longer need the "create directory" parts

*roles/docker-test/tasks/main.yaml*

```
- name: start compose
  docker_compose:
    project_name: superset
    definition:
      version: '2'
      services:
        redis:
          image: redis:5-alpine
        superset_db:
          environment:
            POSTGRES_USER: superset
            POSTGRES_PASSWORD: superset
            PGDATA: /var/lib/postgresql/data/pgdata
          image: postgres:11-alpine
          volumes:
           - db:/var/lib/postgresql/data/pgdata
        superset:
          image: catalpaio/superset:dev
          environment:
            POSTGRES_USER: superset
            POSTGRES_PASSWORD: superset
            SECRET_KEY: not-really-secret
          ports:
            - "8088"
          volumes:
            - app:/var/www/static
      volumes:
        db:
        app:
```


We still have a couple of tasks to run, we can script though.

The commands which we had before, we can shell command:

*roles/docker-test/tasks/main.yaml*
```
- name: send shell commands to init superset (1)
  shell: docker exec superset_superset_1 bash -c 'FLASK_APP=superset flask fab create-admin --username admin --lastname admin --firstname admin --email all@catalpa.io --password kafemanas'

- name: send shell commands to init superset (2)
  shell: docker exec superset_superset_1 bash -c 'superset db upgrade'

- name: send shell commands to init superset (3)
  shell: docker exec superset_superset_1 bash -c 'superset init'
```